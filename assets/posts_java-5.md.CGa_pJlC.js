import{_ as p,m as e,c as o,q as t,z as s,S as r,y as n,a,i as c,h as i}from"./chunks/framework.BmiwJf14.js";const q=JSON.parse('{"title":"Java 学习入门 5","description":"","frontmatter":{"title":"Java 学习入门 5","date":"2024-09-13T08:30:00.000Z","tags":["Java","code"],"cover":"../cover-java.png"},"headers":[],"relativePath":"posts/java-5.md","filePath":"posts/java-5.md"}'),y={name:"posts/java-5.md"},b=n('<h1 id="面向对象" tabindex="-1">面向对象 <a class="header-anchor" href="#面向对象" aria-label="Permalink to &quot;面向对象&quot;">​</a></h1><hr><nav class="table-of-contents"><ul><li><a href="#静态变量和静态方法">静态变量和静态方法</a></li><li><a href="#访问权限控制">访问权限控制</a></li><li><a href="#枚举类">枚举类</a><ul><li><a href="#定义简单枚举">定义简单枚举</a></li><li><a href="#带字段和方法的枚举">带字段和方法的枚举</a></li></ul></li></ul></nav><hr><blockquote><p>本章中略过了大部分面向对象编程的基础概念，仅重点记录 <code>静态变量和静态方法</code> <code>访问权限控制</code> <code>枚举类</code>。</p></blockquote><h2 id="静态变量和静态方法" tabindex="-1">静态变量和静态方法 <a class="header-anchor" href="#静态变量和静态方法" aria-label="Permalink to &quot;静态变量和静态方法&quot;">​</a></h2><p>使用 <code>static</code> 关键字修饰的变量和方法就是静态变量和静态方法。静态变量和静态方法属于类，而不是属于对象。它们在类加载时就会被初始化，不需要创建对象就可以访问。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>类的初始化时机</p><ul><li>创建类的实例</li><li>访问类的静态变量</li><li>调用类的静态方法</li><li>使用 <code>Class.forName()</code> 方法加载类（反射）</li><li>初始化类的子类</li><li>JVM 启动时加载的主类（包含 <code>main</code> 方法的类）</li></ul></div><h2 id="访问权限控制" tabindex="-1">访问权限控制 <a class="header-anchor" href="#访问权限控制" aria-label="Permalink to &quot;访问权限控制&quot;">​</a></h2>',9),d=n(`<table tabindex="0"><thead><tr><th>访问级别</th><th>当前类</th><th>同一个包下的类</th><th>不同包下的子类</th><th>不同包下的类</th></tr></thead><tbody><tr><td>public</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>protected</td><td>✅</td><td>✅</td><td>✅</td><td>❌</td></tr><tr><td>默认</td><td>✅</td><td>✅</td><td>❌</td><td>❌</td></tr><tr><td>private</td><td>✅</td><td>❌</td><td>❌</td><td>❌</td></tr></tbody></table><h2 id="枚举类" tabindex="-1">枚举类 <a class="header-anchor" href="#枚举类" aria-label="Permalink to &quot;枚举类&quot;">​</a></h2><h3 id="定义简单枚举" tabindex="-1">定义简单枚举 <a class="header-anchor" href="#定义简单枚举" aria-label="Permalink to &quot;定义简单枚举&quot;">​</a></h3><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 定义枚举</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#D73A49;"> enum</span><span style="color:#6F42C1;"> Day</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">    SUNDAY</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">MONDAY</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">TUESDAY</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">WEDNESDAY</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">THURSDAY</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">FRIDAY</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">SATURDAY</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 使用枚举</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#D73A49;"> class</span><span style="color:#6F42C1;"> EnumExample</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">    public</span><span style="color:#D73A49;"> static</span><span style="color:#D73A49;"> void</span><span style="color:#6F42C1;"> main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        Day today </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Day.MONDAY;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">        switch</span><span style="color:#24292E;"> (today) {</span></span>
<span class="line"><span style="color:#D73A49;">            case</span><span style="color:#24292E;"> MONDAY</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">                System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Today is Monday.&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">                break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">            case</span><span style="color:#24292E;"> TUESDAY</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">                System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Today is Tuesday.&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">                break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6A737D;">            // 其他情况...</span></span>
<span class="line"><span style="color:#D73A49;">            default:</span></span>
<span class="line"><span style="color:#24292E;">                System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Other day.&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">                break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h3 id="带字段和方法的枚举" tabindex="-1">带字段和方法的枚举 <a class="header-anchor" href="#带字段和方法的枚举" aria-label="Permalink to &quot;带字段和方法的枚举&quot;">​</a></h3><div class="language-java line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-light vp-code" tabindex="0"><code><span class="line"><span style="color:#6A737D;">// 定义带字段和方法的枚举</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#D73A49;"> enum</span><span style="color:#6F42C1;"> Day</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#005CC5;">    SUNDAY</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;星期日&quot;</span><span style="color:#24292E;">), </span><span style="color:#005CC5;">MONDAY</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;星期一&quot;</span><span style="color:#24292E;">), </span><span style="color:#005CC5;">TUESDAY</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;星期二&quot;</span><span style="color:#24292E;">), </span><span style="color:#005CC5;">WEDNESDAY</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;星期三&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#005CC5;">    THURSDAY</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;星期四&quot;</span><span style="color:#24292E;">), </span><span style="color:#005CC5;">FRIDAY</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;星期五&quot;</span><span style="color:#24292E;">), </span><span style="color:#005CC5;">SATURDAY</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;星期六&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">    private</span><span style="color:#24292E;"> String chineseName;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    // 构造方法</span></span>
<span class="line"><span style="color:#D73A49;">    private</span><span style="color:#6F42C1;"> Day</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">chineseName</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#005CC5;">        this</span><span style="color:#24292E;">.chineseName </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> chineseName;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">    // 获取中文名称的方法</span></span>
<span class="line"><span style="color:#D73A49;">    public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">getChineseName</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#D73A49;">        return</span><span style="color:#24292E;"> chineseName;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 使用带字段和方法的枚举</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#D73A49;"> class</span><span style="color:#6F42C1;"> EnumExample</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#D73A49;">    public</span><span style="color:#D73A49;"> static</span><span style="color:#D73A49;"> void</span><span style="color:#6F42C1;"> main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        Day today </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Day.MONDAY;</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Today is &quot;</span><span style="color:#D73A49;"> +</span><span style="color:#24292E;"> today </span><span style="color:#D73A49;">+</span><span style="color:#032F62;"> &quot;, in Chinese: &quot;</span><span style="color:#D73A49;"> +</span><span style="color:#24292E;"> today.</span><span style="color:#6F42C1;">getChineseName</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div>`,6);function u(E,m,A,D,h,C){const l=e("Mermaid");return a(),o("div",null,[b,(a(),t(r,null,{default:s(()=>[c(l,{id:"mermaid-59",class:"mermaid",graph:"graph%20TD%0A%20%20A%5B%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6%5D%0A%20%20A%20--%3E%20B%5Bpublic%5D%0A%20%20A%20--%3E%20C%5Bprotected%5D%0A%20%20A%20--%3E%20D%5Bdefault%5D%0A%20%20A%20--%3E%20E%5Bprivate%5D%0A"})]),fallback:s(()=>[i(" Loading... ")]),_:1})),d])}const v=p(y,[["render",u]]);export{q as __pageData,v as default};
